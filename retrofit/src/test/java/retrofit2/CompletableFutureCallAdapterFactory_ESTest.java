/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 11 11:09:59 GMT 2022
 */

package retrofit2;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.lang.annotation.Annotation;
import java.util.concurrent.CompletableFuture;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class CompletableFutureCallAdapterFactory_ESTest extends CompletableFutureCallAdapterFactory_ESTest_scaffolding {

  @Test(timeout = 40000)
  public void test0() throws Throwable {
    CompletableFutureCallAdapterFactory completableFutureCallAdapterFactory0 = new CompletableFutureCallAdapterFactory();
    Annotation[] annotationArray0 = new Annotation[3];
    Class<CompletableFuture> class0 = CompletableFuture.class;
    assertThrows(IllegalStateException.class, () -> {
      completableFutureCallAdapterFactory0.get(class0, annotationArray0, null);
    });
  }

  @Test
  public void test1() {
    CompletableFutureCallAdapterFactory completableFutureCallAdapterFactory0 = new CompletableFutureCallAdapterFactory();
    Annotation[] annotationArray0 = new Annotation[3];
    Class<String> class0 = String.class;
    assertEquals(null, completableFutureCallAdapterFactory0.get(class0, annotationArray0, null));
  }
}
