apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'com.vanniktech.maven.publish'

dependencies {
  api libs.okhttp
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.testng:testng:7.1.0'
  implementation 'org.testng:testng:7.1.0'

  compileOnly libs.android
  compileOnly libs.kotlinStdLib
  compileOnly libs.kotlinCoroutines

  compileOnly libs.animalSnifferAnnotations
  compileOnly libs.findBugsAnnotations

  testImplementation projects.retrofit.testHelpers
  testImplementation libs.junit
  testImplementation libs.assertj
  testImplementation libs.guava
  testImplementation libs.mockwebserver
  // https://mvnrepository.com/artifact/org.mockito/mockito-core
  testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
  // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
  testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
  // https://mvnrepository.com/artifact/org.evosuite.plugins/evosuite-maven-plugin
  api group: 'org.evosuite', name: 'evosuite-runtime', version: '1.0.4-alpha2'
  //Thanks for using https://jar-download.com
}

jar {
  manifest {
    attributes  'Automatic-Module-Name': 'retrofit2'
  }
}

// Create a test task for each supported JDK.
(8..17).each { majorVersion ->
  // Adoptium JDK 9 cannot extract on Linux or Mac OS.
  if (majorVersion == 9) return

  def jdkTest = tasks.register("testJdk$majorVersion", Test) {
    javaLauncher = javaToolchains.launcherFor {
      languageVersion = JavaLanguageVersion.of(majorVersion)
    }

    description = "Runs the test suite on JDK $majorVersion"
    group = LifecycleBasePlugin.VERIFICATION_GROUP

    // Copy inputs from normal Test task.
    def testTask = tasks.getByName("test")
    classpath = testTask.classpath
    testClassesDirs = testTask.testClassesDirs
  }
  tasks.named("check").configure {
    dependsOn(jdkTest)
  }
}
